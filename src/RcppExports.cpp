// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// map_impl
SEXP map_impl(Environment env, std::string x_name, std::string f_name);
RcppExport SEXP _purrr_map_impl(SEXP envSEXP, SEXP x_nameSEXP, SEXP f_nameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Environment >::type env(envSEXP);
    Rcpp::traits::input_parameter< std::string >::type x_name(x_nameSEXP);
    Rcpp::traits::input_parameter< std::string >::type f_name(f_nameSEXP);
    rcpp_result_gen = Rcpp::wrap(map_impl(env, x_name, f_name));
    return rcpp_result_gen;
END_RCPP
}
// vmap_impl
SEXP vmap_impl(Environment env, std::string x_name, std::string f_name, std::string type);
RcppExport SEXP _purrr_vmap_impl(SEXP envSEXP, SEXP x_nameSEXP, SEXP f_nameSEXP, SEXP typeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Environment >::type env(envSEXP);
    Rcpp::traits::input_parameter< std::string >::type x_name(x_nameSEXP);
    Rcpp::traits::input_parameter< std::string >::type f_name(f_nameSEXP);
    Rcpp::traits::input_parameter< std::string >::type type(typeSEXP);
    rcpp_result_gen = Rcpp::wrap(vmap_impl(env, x_name, f_name, type));
    return rcpp_result_gen;
END_RCPP
}
// map2_impl
SEXP map2_impl(Environment env, std::string x_name, std::string y_name, std::string f_name);
RcppExport SEXP _purrr_map2_impl(SEXP envSEXP, SEXP x_nameSEXP, SEXP y_nameSEXP, SEXP f_nameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Environment >::type env(envSEXP);
    Rcpp::traits::input_parameter< std::string >::type x_name(x_nameSEXP);
    Rcpp::traits::input_parameter< std::string >::type y_name(y_nameSEXP);
    Rcpp::traits::input_parameter< std::string >::type f_name(f_nameSEXP);
    rcpp_result_gen = Rcpp::wrap(map2_impl(env, x_name, y_name, f_name));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_purrr_map_impl", (DL_FUNC) &_purrr_map_impl, 3},
    {"_purrr_vmap_impl", (DL_FUNC) &_purrr_vmap_impl, 4},
    {"_purrr_map2_impl", (DL_FUNC) &_purrr_map2_impl, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_purrr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
